mixin testCard(link, src, title, descr)
	a(href=link).card-item
		img.card-item__img(src=src alt='foto-1' title="title-foto")
		h2.card-item__title=title
		p.card-item__descr=descr

mixin icon(icon, condition)
	if(condition)
		svg(class= icon  role="presentation")&attributes(attributes)
			use(xlink:href="#"+ icon + "")
	else
		span(class='svg-wrap')&attributes(attributes)
			svg(class="svg-icon icon--"+ icon + ""  role="presentation")
				use(xlink:href="#"+ icon + "")
mixin svg(icon)
		svg(class="icon--"+ icon + ""  role="presentation")&attributes(attributes)
			use(xlink:href="#icon-"+ icon + "")

mixin link-blank(href)
	a(herf=href rel="nofollow" target="_blank")
mixin img(src)
	img(data-src='./assets/images/'+src+'' title="foto" alt="foto")&attributes(attributes)

mixin btn(text, color)
	button(type="button" class="hvr-bounce-to-top button-std "+color)&attributes(attributes) #{text}
		block
mixin a(text, color, href)
	a(href=href class="hvr-bounce-to-top button-std "+color)&attributes(attributes) #{text}

mixin SelectBox(name, id, options)
	.u-select-box
		.u-select-box__current(tabindex="1")
			each option, index in options
				.u-select-box__value
					if(index == 0)
						input.u-select-box__input(class='js_'+1+'checkbox js_select_checkbox' type="radio" id=id+index value=option.value name=id checked)
					else
						input.u-select-box__input(class='js_'+id+'checkbox js_select_checkbox' type="radio" id=id+index value=option.value name=id)
					p.u-select-box__input-text #{option.name}
				+svg('select-arr').u-select-box__icon
		ul.u-select-box__list
			each option, index in options
				li
					label.u-select-box__option(for=id+index aria-hidden) #{option.name}

mixin RangeSlider(options)
	each option, index in options
		li.range-item.filter__item.js-range-item
			h4.range-item__label.filter__label #{option.label}
			input.js-range-init(id=option.id type="hidden" data-from=option.from data-min=option.min data-to=option.to data-max=option.max)
			.u-range-item-nav
				input(id=option.id+"_min" class="js_"+option.id+"_min js-current-min" name=option.id+"_min" maxlength=option.max type="number" min=option.min value=option.min max=option.max)
				input(id=option.id+"_max" class="js_"+option.id+"_max js-current-max" name=option.id+"_max" maxlength=option.max type="number" min=option.min value=option.max max=option.max)

mixin lazyYoutube(id)
	<iframe src="https://www.youtube.com/embed/#{id}" srcdoc="<style>*{padding:0;margin:0;overflow:hidden}html,body{height:100%}img,span{position:absolute;width:100%;top:0;bottom:0;margin:auto}span{height:1.5em;text-align:center;font:48px/1.5 sans-serif;color:white;text-shadow:0 0 0.5em black}</style><a href='https://www.youtube.com/embed/#{id}?autoplay=1'><img src='https://img.youtube.com/vi/#{id}/hqdefault.jpg' alt=''><span>â–¶</span></a>" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen title=""></iframe>

mixin btn4(text)
	button(type="button" class="hvr-bounce-to-top button-std-4 "+color)&attributes(attributes) #{text}
		block
mixin a4(text, href)
	a(href=href class="hvr-bounce-to-top button-std-4 "+color)&attributes(attributes) #{text}
mixin btn1(text)
	button(type="button" class="hvr-bounce-to-top button-std-1 "+color)&attributes(attributes) 
		.button-std-1__icon
			block
		span #{text}
mixin a1(text, href)
	a(href=href class="hvr-bounce-to-top button-std-4 "+color)&attributes(attributes) #{text}
mixin btn2(text)
	button(type="button" class="hvr-bounce-to-top button-std-2 "+color)&attributes(attributes) 
		<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
			<circle cx="50" cy="50" r="50" fill="#2D2D2D"/>
			<path d="M40.8054 66L40 65.3849L51.6394 50.4968L40 35.6151L40.8054 35L60 50.254L60 50.869L40.8054 66Z" fill="#F3EFE9"/>
			</svg>

		block
mixin a2(text, href)
	a(href=href class="hvr-bounce-to-top button-std-2 "+color)&attributes(attributes) 
		<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
			<circle cx="50" cy="50" r="50" fill="#2D2D2D"/>
			<path d="M40.8054 66L40 65.3849L51.6394 50.4968L40 35.6151L40.8054 35L60 50.254L60 50.869L40.8054 66Z" fill="#F3EFE9"/>
				</svg>
		block


mixin btn3(text)
	button(type="button" class="button-std-3 "+color)&attributes(attributes)
		span #{text}
		<svg width="85" height="26" viewBox="0 0 85 26" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path d="M70.5641 0L69.9584 0.515873L78.1354 12.381L7.51898e-10 12.381L8.20822e-10 13.5159L78.1354 13.5159L69.9584 25.4841L70.5641 26L85 13.2063L85 12.6905L70.5641 0Z" fill="#D9B48F"/>
			</svg>
mixin a3(text, href)
	a(href=href class="button-std-3 "+color)&attributes(attributes)
		span #{text}
		<svg width="85" height="26" viewBox="0 0 85 26" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path d="M70.5641 0L69.9584 0.515873L78.1354 12.381L7.51898e-10 12.381L8.20822e-10 13.5159L78.1354 13.5159L69.9584 25.4841L70.5641 26L85 13.2063L85 12.6905L70.5641 0Z" fill="#D9B48F"/>
			</svg>

mixin social(text, href)
	a(href=href target='_blank' class="social-icon") #{text}

mixin roundImageOnFirstSection(href)
	<svg class="round-image-on-first-section" preserveAspectRatio="xMidYMin slice" width="638" height="937" viewBox="0 0 638 937" fill="none" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
		<mask id="mask0" mask-type="alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="638" height="937">
		<path d="M0 300C0 134.315 134.315 0 300 0H338C503.685 0 638 134.315 638 300V937H0V300Z" fill="url(#pattern0)"/>
		<path d="M0 300C0 134.315 134.315 0 300 0H338C503.685 0 638 134.315 638 300V937H0V300Z" fill="url(#paint0_linear)" fill-opacity="0.07"/>
		</mask>
		<g mask="url(#mask0)">
		<path d="M-43 240C-43 74.3146 91.3146 -60 257 -60H337C502.685 -60 637 74.3146 637 240V938H-43V240Z" fill="url(#pattern1)"/>
		<path d="M-43 240C-43 74.3146 91.3146 -60 257 -60H337C502.685 -60 637 74.3146 637 240V938H-43V240Z" fill="url(#paint1_linear)" fill-opacity="0.07"/>
		</g>
		<defs>
		<pattern id="pattern0" patternContentUnits="objectBoundingBox" width="1" height="1">
		<use xlink:href="#image0" transform="translate(-0.452712) scale(0.00145077 0.00100127)"/>
		</pattern>
		<pattern id="pattern1" patternContentUnits="objectBoundingBox" width="1" height="1">
		<use xlink:href="#image0" transform="translate(-0.452712) scale(0.00145077 0.00100127)"/>
		</pattern>
		<linearGradient id="paint0_linear" x1="319" y1="0" x2="319" y2="937" gradientUnits="userSpaceOnUse">
		<stop/>
		<stop offset="1" stop-opacity="0"/>
		</linearGradient>
		<linearGradient id="paint1_linear" x1="297" y1="-60" x2="297" y2="938" gradientUnits="userSpaceOnUse">
		<stop/>
		<stop offset="1" stop-opacity="0"/>
		</linearGradient>
		<image x="-100" id="image0" width="1500" height="1101" xlink:href=#{href}>
		</defs>
		</svg>
mixin ellipseCommon(text)
	a(href="#").ellipse-common&attributes(attributes)
		.ellipse-common__text #{text}
		<svg data-motion-svg class="ellipse-common__decor" width="573" height="375" viewBox="15 50 573 375" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path class="circle1" d="M452.189 102.294C463.835 102.294 467.162 106.367 467.162 118.003C467.162 106.367 471.044 102.294 482.135 102.294C471.044 102.294 467.162 98.2211 467.162 86.0029C467.162 98.2211 463.835 102.294 452.189 102.294Z" fill="#D9B48F"/>
			<path class="circle2" d="M102.826 368.294C114.471 368.294 117.799 372.367 117.799 384.003C117.799 372.367 121.68 368.294 132.771 368.294C121.68 368.294 117.799 364.221 117.799 352.003C117.799 364.221 114.471 368.294 102.826 368.294Z" fill="#D9B48F"/>
			<path class="road1" d="M570.611 119.207C574.974 135.49 571.671 153.04 561.889 170.863C552.105 188.69 535.853 206.761 514.379 224.045C471.432 258.613 407.672 289.973 333.276 309.908C258.881 329.842 187.983 334.563 133.506 326.1C106.267 321.868 83.1567 314.344 65.7705 303.798C48.3873 293.254 36.7518 279.706 32.3888 263.423C28.0259 247.141 31.3288 229.59 41.1109 211.767C50.8947 193.941 67.1464 175.87 88.6206 158.586C131.568 124.018 195.328 92.6572 269.723 72.723C344.118 52.7889 415.016 48.0679 469.494 56.5309C496.733 60.7625 519.843 68.2865 537.229 78.8327C554.612 89.377 566.248 102.925 570.611 119.207Z" stroke="#D9B48F" stroke-opacity="0.5"/>
			<path class="road2" d="M32.2724  309.186C27.9359 292.896 31.2673 275.351 41.0783 257.544C50.891 239.733 67.1721 221.689 88.6742 204.439C131.677 169.941 195.488 138.684 269.916 118.871C344.343 99.0576 415.249 94.4517 469.712 103.003C496.945 107.279 520.043 114.84 537.412 125.415C554.778 135.987 566.391 149.554 570.728 165.844C575.064 182.133 571.733 199.678 561.922 217.486C552.109 235.296 535.828 253.341 514.326 270.59C471.323 305.088 407.512 336.345 333.084 356.158C258.657 375.972 187.751 380.578 133.288 372.026C106.055 367.75 82.9575 360.189 65.5885 349.614C48.2224 339.042 36.6089 325.475 32.2724 309.186Z" stroke="#D9B48F" stroke-opacity="0.5"/>
			</svg>